import asyncio
from datetime import datetime
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.types import Message
from app.core.config import settings
from app.models.user import User
from app.models.telegram_profile import TelegramProfile
from app.database.session import AsyncSessionLocal
from sqlalchemy.future import select
from aiogram.client.default import DefaultBotProperties

bot = Bot(
    token=settings.TELEGRAM_BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

dp = Dispatcher()

waiting_for_login = set()


@dp.message(F.text == "/start")
async def start_handler(message: Message):
    chat_id = message.chat.id
    waiting_for_login.add(chat_id)
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω (username) –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞...")


@dp.message(F.text)
async def handle_login_input(message: Message):
    chat_id = message.chat.id
    text = message.text.strip()

    if chat_id not in waiting_for_login:
        return

    async with AsyncSessionLocal() as session:
        stmt = select(User).where((User.username == text) | (User.phone == text))
        result = await session.execute(stmt)
        user = result.scalar_one_or_none()

        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
            return

        stmt = select(TelegramProfile).where(TelegramProfile.user_id == user.id)
        result = await session.execute(stmt)
        profile = result.scalar_one_or_none()

        if profile:
            await message.answer("‚ö†Ô∏è Telegram —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —ç—Ç–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.")
            return

        new_profile = TelegramProfile(
            user_id=user.id,
            chat_id=chat_id,
            username=message.from_user.username,
            created_at=datetime.utcnow()
        )
        session.add(new_profile)
        await session.commit()

        await message.answer("‚úÖ Telegram —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –≤–∞—à–µ–π —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏!")
        waiting_for_login.remove(chat_id)


async def main():
    print("ü§ñ Bot started...")
    await dp.start_polling(bot)



